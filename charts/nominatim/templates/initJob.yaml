{{- if .Values.initJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "common.names.fullname" . }}-init
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/part-of: nominatim
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.initJob.annotations "context" $ ) | nindent 4 }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  backoffLimit: {{ .Values.initJob.backoffLimit }}
  template:
    metadata:
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.initJob.podLabels .Values.commonLabels ) "context" . ) }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: init
          {{- if .Values.initJob.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.initJob.podAnnotations "context" $) | nindent 8 }}
          {{- end }}
    spec:
      restartPolicy: Never
      {{- if .Values.initJob.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.initJob.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-db
          image: postgres
          env:
            - name: NOMINATIM_DATABASE_URL
              {{- if .Values.externalDatabase.existingSecretUrl }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecretUrl }}
                  key: {{ .Values.externalDatabase.existingSecretUrlKey }}
              {{- else }}
              value: {{ include "nominatim.databaseUrl" . }}
              {{- end }}
          args:
            - /bin/bash
            - -c
            - |
              echo $NOMINATIM_DATABASE_URL;
              until pg_isready -d $NOMINATIM_DATABASE_URL; do
                echo "Waiting for database..."
                sleep 2
              done

        - name: download
          image: curlimages/curl
          workingDir: /nominatim
          volumeMounts:
            - mountPath: /nominatim
              name: data
          command:
            - /bin/sh
            - -c
            - |
{{- if .Values.initJob.customStyleUrl }}
              if [ -f custom.style" ]; then
                echo "custom.style exists."
              else
                echo "Downloading US postcode"
                curl -A {{ include "chart.userAgent" . }} {{ .Values.initJob.customStyleUrl }} --create-dirs -L -f -o custom.style
              fi
 {{- end }}

{{- if .Values.initJob.importWikipedia }}
              if [ -f "wikimedia-importance.sql.gz" ]; then
                echo "wikimedia-importance.sql.gz exists."
              else
                echo "Downloading US postcode"
                curl -A {{ include "chart.userAgent" . }} {{ .Values.initJob.wikipediaUrl }} --create-dirs -L -f -o wikimedia-importance.sql.gz
              fi
 {{- end }}

{{- if .Values.initJob.importGB_Postcode }}
              if [ -f "gb_postcodes.csv.gz" ]; then
                echo "gb_postcodes.csv.gz exists."
              else
                echo "Downloading US postcode"
                curl -A {{ include "chart.userAgent" . }} https://www.nominatim.org/data/gb_postcodes.csv.gz --create-dirs -L -f -o gb_postcodes.csv.gz
              fi
 {{- end }}

{{- if .Values.initJob.importUS_Postcode }}
              if [ -f "us_postcodes.csv.gz" ]; then
                echo "us_postcodes.csv.gz exists."
              else
                echo "Downloading US postcode"
                curl -A {{ include "chart.userAgent" . }} https://www.nominatim.org/data/us_postcodes.csv.gz --create-dirs -L -f -o us_postcodes.csv.gz
              fi
 {{- end }}
              if [ -f "data.osm.pbf" ]; then
                echo "data.osm.pbf exists."
              else
                echo "Downloading pbf file"
                curl -A {{ include "chart.userAgent" . }} {{ .Values.initJob.pbfUrl }} --create-dirs -L -f -o data.osm.pbf
              fi

          {{- if .Values.initJob.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.initJob.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.initJob.resources }}
          resources: {{- toYaml .Values.initJob.resources | nindent 12 }}
          {{- else if ne .Values.initJob.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.initJob.resourcesPreset) | nindent 12 }}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          workingDir: /nominatim
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.initJob.customStyleUrl }}
            - name: NOMINATIM_IMPORT_STYLE
              value: /nominatim/custom.style
            {{- else }}
            - name: NOMINATIM_IMPORT_STYLE
              value: {{ .Values.initJob.importStyle }}
            {{- end }}
            - name: NOMINATIM_DATABASE_DSN
              {{- if .Values.externalDatabase.existingSecretDsn }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecretDsn }}
                  key: {{ .Values.externalDatabase.existingSecretDsnKey }}
              {{- else }}
              value: {{ include "nominatim.databaseDSN" . }}
              {{- end }}
            {{- if .Values.flatnode.enabled }}
            - name: NOMINATIM_FLATNODE_FILE
              value: /nominatim/flatnode/flatnode.file
            {{- end }}
            - name: REPLICATION_ENABLED
              value: {{ .Values.updates.enabled | quote }}
            - name: THREADS
              value: {{ .Values.initJob.threads | quote }}
            - name: NOMINATIM_DATABASE_WEBUSER
              value: {{ include "nominatim.databaseUser" . }}
            - name: CONTINUE
              value: {{ .Values.initJob.continue | quote }}
          command:
            - /bin/bash
            - -ec
            - |
              if [ -z "$CONTINUE" ]; then
                echo "Starting data import."
                nominatim import --osm-file data.osm.pbf --threads $THREADS
              else
                echo "Continuing initialization from step: '$CONTINUE'."
                nominatim import --continue $CONTINUE --threads $THREADS
              fi

              nominatim index --threads $THREADS
              nominatim admin --check-database

              if [ "$REPLICATION_ENABLED" = "true" ]; then
                nominatim replication --init
                if [ "$FREEZE" = "true" ]; then
                  echo "Skipping freeze because REPLICATION_URL is not empty"
                fi
              else
               if [ "$FREEZE" = "true" ]; then
                  echo "Freezing database"
                  nominatim freeze
                fi
              fi;

              echo "Import job done. Warming up database indices."

              nominatim admin --warm

              echo "Warming finished."
              echo "Initialization finished. Please continue with step 2 now."
            - /scripts/migrate-and-create-admin.sh
          {{- if .Values.initJob.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.initJob.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /nominatim
              name: data
            - mountPath: /dev/shm
              name: dshm
            {{- if .Values.flatnode.enabled }}
            - mountPath: /nominatim/flatnode
              name: flatnode
              subPath: flatnode
            {{- end }}
          {{- if .Values.initJob.resources }}
          resources:
            {{- toYaml .Values.initJob.resources | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if  .Values.flatnode.enabled }}
        - name: flatnode
          persistentVolumeClaim:
            claimName: {{ include "common.names.fullname" . }}
        {{- end }}
        - name: dshm
          emptyDir:
            medium: Memory
        - name: data
          {{- if .Values.initJob.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.initJob.persistence.existingClaim | default (printf "%s-data" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-") }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end }}
